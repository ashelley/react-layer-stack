{"version":3,"sources":["../src/LayerStackMountPoint.js"],"names":["LayerStackMountPoint","props","context","unsubscribe","layerStore","subscribeToMountPoint","id","setState","mountPointId","elementType","mountPointArgs","fn","children","show","hide","store","layers","displaying","map","index","key","layer","layerFn","args","Error","contextTypes","object","defaultProps"],"mappings":"gnBAAA,8B;;AAEqBA,oB;;AAEnB,gCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AACpBD,SADoB,EACbC,OADa;AAE1B,UAAKC,WAAL,GAAmBD,QAAQE,UAAR,CAAmBC,qBAAnB,CAAyCJ,MAAMK,EAA/C,EAAmD,YAAM;AAC1E,YAAKC,QAAL,CAAc,EAAd;AACD,KAFkB,CAAnB;AAGA,UAAKH,UAAL,GAAkBF,QAAQE,UAA1B,CAL0B;AAM3B,G;;AAEsB;AACrB,WAAKD,WAAL;AACA,WAAKA,WAAL,GAAmB,IAAnB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACD,K;;AAEQ;AACiE,WAAKH,KADtE,KACKO,YADL,UACCF,EADD,KACmBG,WADnB,UACmBA,WADnB,KACgCC,cADhC,UACgCA,cADhC,KAC0DC,EAD1D,UACgDC,QADhD;AAEgB,WAAKR,UAFrB,KAECS,KAFD,eAECA,IAFD,KAEOC,KAFP,eAEOA,IAFP;AAGwB,WAAKV,UAAL,CAAgBW,KAHxC,KAGCC,MAHD,qBAGCA,MAHD,KAGSC,UAHT,qBAGSA,UAHT;AAIP,aAAO,0BAAcR,WAAd,EAA2B,EAA3B,EAA+BE,KAAKA,GAAG,EAACK,cAAD,EAASC,sBAAT,EAAqBJ,WAArB,EAA2BC,WAA3B,EAAiCN,0BAAjC,EAA+CE,8BAA/C,EAAH,CAAL,CAAwE;AAAxE,QAClCO,WAAWC,GAAX,CAAgB,UAACZ,EAAD,EAAKa,KAAL,UAAe;AAC/B,oCAAcV,WAAd,EAA2B,EAAEW,KAAKd,EAAP,EAA3B,EAAyC,YAAM;AAC7C,gBAAMe,QAAQL,OAAOV,EAAP,CAAd;AACA,gBAAIe,SAASA,MAAMC,OAAf,IAA0BD,MAAMb,YAAN,KAAuBA,YAArD,EAAmE;AACjE,qBAAOa,MAAMC,OAAN,eAAc;AACnBH,4BADmB,EACZb,MADY,EACRW,sBADQ,EACID,cADJ,EACYN,8BADZ,EAC4B;AAC/CI,sBAAM,wBAAMA,MAAKR,EAAL,CAAN,EAFa,EAEG;AACtB;AACAO,sBAAM,mDAAIU,IAAJ,gDAAIA,IAAJ,iCAAaV,wBAAKP,EAAL,SAAYiB,IAAZ,EAAb,EAJa,CAIkB;AAJlB,eAAd,4BAKDF,MAAME,IALL,GAAP;AAMD;AACD,gBAAI,OAAOF,KAAP,KAAiB,WAAjB,IAAgC,OAAOA,MAAMC,OAAb,KAAyB,WAA7D,EAA0E;AACxE,oBAAM,IAAIE,KAAJ;AACqClB,gBADrC;AAEmBA,gBAFnB,gDAAN;;;AAKD;AACN,WAjB2C,EAAxC,CADgB,GAAhB,CADG,CAAP;AAoBD,K,uEAxCkBN,oB;;;AA2CrBA,qBAAqByB,YAArB,GAAoC;AAClCrB,cAAY,iBAAUsB,MADY,EAApC;;;AAIA1B,qBAAqB2B,YAArB,GAAoC;AAClClB,eAAa,MADqB,EAApC","file":"LayerStackMountPoint.js","sourcesContent":["import React, { Component, PropTypes, createElement} from 'react'\n\nexport default class LayerStackMountPoint extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.unsubscribe = context.layerStore.subscribeToMountPoint(props.id, () => {\n      this.setState({})\n    });\n    this.layerStore = context.layerStore;\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n    this.unsubscribe = null;\n    this.layerStore = null;\n  }\n\n  render() {\n    const { id: mountPointId, elementType, mountPointArgs, children: fn } = this.props;\n    const { show, hide } = this.layerStore;\n    const { layers, displaying } = this.layerStore.store;\n    return createElement(elementType, {}, fn ? fn({layers, displaying, show, hide, mountPointId, mountPointArgs}) // it's possible to provide alternative layerFn for the MountPoint\n      : displaying.map ((id, index) => // if no alternative layerFn provided we'll use the default one\n        createElement(elementType, { key: id }, (() => {\n          const layer = layers[id];\n          if (layer && layer.layerFn && layer.mountPointId === mountPointId) {\n            return layer.layerFn({\n              index, id, displaying, layers, mountPointArgs, // seems like there is no valid use-case mountPointId in the Layer render function\n              hide: () => hide(id), // intention here is to hide ID's management from Layer and let app developer manage these IDs independently\n              // which will give an ability to write general-purpose Layers and share them b/w projects\n              show: (...args) => show(id, ...args) // sometimes you may want to change args of the current layer\n            }, ...layer.args)\n          }\n          if (typeof layer === 'undefined' || typeof layer.layerFn === 'undefined') {\n            throw new Error(`\n    It seems like you're using LayerToggle with id=\"${ id }\" but corresponding Layer isn't declared in the current Components tree.\n    Make sure that Layer with id=\"${ id }\" is rendered into the current tree.\n    `\n            )\n          }\n    })())))\n  }\n}\n\nLayerStackMountPoint.contextTypes = {\n  layerStore: PropTypes.object\n};\n\nLayerStackMountPoint.defaultProps = {\n  elementType: 'span'\n};"]}