{"version":3,"sources":["../src/Layer.js"],"names":["Layer","layerStore","context","register","props","id","children","mountPointId","showInitially","show","defaultArgs","setArgs","newProps","use","needUpdate","toString","length","i","equals","JSON","stringify","updateFn","propTypes","array","contextTypes","object"],"mappings":"gnBAAA,8B;AACA,oC;;AAEqBA,K;AACE;AACXC,gBADW,GACI,KAAKC,OADT,CACXD,UADW;AAEnBA,iBAAWE,QAAX,CAAoB,KAAKC,KAAL,CAAWC,EAA/B,EAAmC,KAAKD,KAAL,CAAWE,QAA9C,EAAwD,KAAKF,KAAL,CAAWG,YAAnE;AACA,UAAI,KAAKH,KAAL,CAAWI,aAAf,EAA8B;AAC5BP,mBAAWQ,IAAX,CAAgB,KAAKL,KAAL,CAAWC,EAA3B,EAA+B,KAAKD,KAAL,CAAWM,WAAX,IAA0B,EAAzD;AACD,OAFD,MAEO;AACLT,mBAAWU,OAAX,CAAmB,KAAKP,KAAL,CAAWC,EAA9B,EAAkC,KAAKD,KAAL,CAAWM,WAAX,IAA0B,EAA5D;AACD;AACF,K;;AAEqBE,Y,EAAU;AACc,WAAKR,KADnB,KACtBE,QADsB,UACtBA,QADsB,KACZD,EADY,UACZA,EADY,KACRE,YADQ,UACRA,YADQ,KACMM,GADN,UACMA,GADN;AAEtBZ,gBAFsB,GAEP,KAAKC,OAFE,CAEtBD,UAFsB;AAG9B,UAAIa,aAAa,KAAjB;AACA,UAAIT,OAAOO,SAASP,EAAhB,IAAsBE,iBAAiBK,SAASL,YAApD,EAAkE;AAChEO,qBAAa,IAAb;AACD,OAFD;AAGK,UAAIR,SAASS,QAAT,OAAwBH,SAASN,QAAT,CAAkBS,QAAlB,EAA5B,EAA0D;AAC7DD,qBAAa,IAAb;AACD,OAFI;AAGA,UAAID,GAAJ,EAAS;AACZ,YAAIA,IAAIG,MAAJ,KAAeJ,SAASC,GAAT,CAAaG,MAAhC,EAAwC;AACtCF,uBAAa,IAAb;AACD,SAFD,MAEO;AACL,cAAIG,IAAIJ,IAAIG,MAAZ;AACA,iBAAOC,GAAP,EAAY;AACV,gBAAI,8BAAgBJ,IAAII,CAAJ,CAAhB,KAA2B,8BAAgBL,SAASC,GAAT,CAAaI,CAAb,CAAhB,CAA/B,EAAiE;AAC/D,kBAAIJ,IAAII,CAAJ,MAAWL,SAASC,GAAT,CAAaI,CAAb,CAAf,EAAgC;AAC9BH,6BAAa,IAAb;AACD;AACF,aAJD;AAKK,gBAAI,OAAOD,IAAII,CAAJ,EAAOC,MAAd,KAAyB,UAAzB,IAAuC,OAAON,SAASC,GAAT,CAAaI,CAAb,EAAgBC,MAAvB,KAAkC,UAA7E,EAAyF;AAC5F,kBAAI,CAACL,IAAII,CAAJ,EAAOC,MAAP,CAAcN,SAASC,GAAT,CAAaI,CAAb,CAAd,CAAL,EAAqC,CAAE;AACrCH,6BAAa,IAAb;AACD;AACF,aAJI;AAKA,gBAAIK,KAAKC,SAAL,CAAeP,IAAII,CAAJ,CAAf,MAA2BE,KAAKC,SAAL,CAAeR,SAASC,GAAT,CAAaI,CAAb,CAAf,CAA/B,EAAgE;AACnEH,2BAAa,IAAb;AACD;AACF;AACF;AACF;;AAED,UAAIA,UAAJ,EAAgB;AACdb,mBAAWoB,QAAX,CAAoBT,SAASP,EAA7B,EAAiCO,SAASN,QAA1C;AACA,eAAO,IAAP;AACD;AACD,aAAO,KAAP;AACD,K;;AAEsB;AACrB;AACA;AACD,K;;AAEQ;AACP,aAAO,IAAP;AACD,K,wDA1DkBN,K;;;AA6DrBA,MAAMsB,SAAN,GAAkB;AAChBT,OAAK,iBAAUU,KADC,EAAlB;;;AAIAvB,MAAMwB,YAAN,GAAqB;AACnBvB,cAAY,iBAAUwB,MADH,EAArB","file":"Layer.js","sourcesContent":["import React, { Component, PropTypes, createElement} from 'react'\nimport { isPrimitiveType } from './helpers'\n\nexport default class Layer extends Component {\n  componentWillMount() {\n    const { layerStore } = this.context;\n    layerStore.register(this.props.id, this.props.children, this.props.mountPointId);\n    if (this.props.showInitially) {\n      layerStore.show(this.props.id, this.props.defaultArgs || [])\n    } else {\n      layerStore.setArgs(this.props.id, this.props.defaultArgs || [])\n    }\n  }\n\n  shouldComponentUpdate(newProps) {\n    const { children, id, mountPointId, use } = this.props;\n    const { layerStore } = this.context;\n    let needUpdate = false;\n    if (id !== newProps.id || mountPointId !== newProps.mountPointId) {\n      needUpdate = true;\n    }\n    else if (children.toString() !== newProps.children.toString()) {\n      needUpdate = true;\n    }\n    else if (use) {\n      if (use.length !== newProps.use.length) {\n        needUpdate = true;\n      } else {\n        let i = use.length;\n        while (i--) {\n          if (isPrimitiveType(use[i]) && isPrimitiveType(newProps.use[i])) {\n            if (use[i] !== newProps.use[i]) {\n              needUpdate = true\n            }\n          }\n          else if (typeof use[i].equals === 'function' && typeof newProps.use[i].equals === 'function') {\n            if (!use[i].equals(newProps.use[i])) { // fast equality check for immutable-js && mori\n              needUpdate = true;\n            }\n          }\n          else if (JSON.stringify(use[i]) !== JSON.stringify(newProps.use[i])) {\n            needUpdate = true;\n          }\n        }\n      }\n    }\n\n    if (needUpdate) {\n      layerStore.updateFn(newProps.id, newProps.children);\n      return true;\n    }\n    return false;\n  }\n\n  componentWillUnmount() {\n    // TODO: garbage collection\n    // this.props.unregister(this.props.id)\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLayer.propTypes = {\n  use: PropTypes.array\n};\n\nLayer.contextTypes = {\n  layerStore: PropTypes.object\n};"]}